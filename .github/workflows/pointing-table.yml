name: Get and Update Pointing Table

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * *'  # Everyday at midnight UTC

permissions:
  contents: write

jobs:
  run-and-commit:
    runs-on: ubuntu-latest
    env:
      PY_SCRIPT: get_pointing_table.py
      OUTPUT_DIR: generated
      TARGET_BRANCH: aia
    steps:
      - name: Check out repo
        uses: actions/checkout@v5
        with:
          fetch-depth: 0
      - name: Set up Python
        uses: actions/setup-python@v6
        with:
          python-version: '3.13'
          cache: 'pip'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Run the script
        run: python "$PY_SCRIPT"
      - name: Publish generated output(s)
        shell: bash
        env:
          PUBLISH_DIR: ${{ env.OUTPUT_DIR }}
          OUTPUT_DIR: ${{ env.OUTPUT_DIR }}
        run: |
          set -euo pipefail

          if [ ! -d "$OUTPUT_DIR" ] || [ -z "$(ls -A "$OUTPUT_DIR")" ]; then
            echo "::warning::No files produced in $OUTPUT_DIR; skipping commit."
            exit 0
          fi

          # Prepare a clean staging area
          TMP_DIR="$(mktemp -d)"
          mkdir -p "$TMP_DIR/$PUBLISH_DIR"
          rsync -a --delete "$OUTPUT_DIR"/ "$TMP_DIR/$PUBLISH_DIR"/

          # Create a brand-new repo/branch with no history
          pushd "$TMP_DIR" >/dev/null
            git init
            git checkout -b "$TARGET_BRANCH"
            git config user.name  "github-actions[bot]"
            git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

            git add -A
            SHORT_SHA="$(echo "${GITHUB_SHA:-}" | cut -c1-7)"
            git commit -m "chore: publish generated output from ${SHORT_SHA} (single-commit) [skip ci]"

            # Push as a history-replacing snapshot
            git remote add origin "https://x-access-token:${GITHUB_TOKEN}@github.com/${GITHUB_REPOSITORY}.git"
            git push --force origin "$TARGET_BRANCH"
          popd >/dev/null

          rm -rf "$TMP_DIR"
